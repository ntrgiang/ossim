#include ./omnetpp.ini
include ./include/seed.ini
include ./include/churn.ini
include ./include/membership.ini

# Uncomment the following line to switch to the debug mode
#
#include ./include/debug-donet.ini

[Config Donet_Homogeneous_Network]
# ------------- new Inet Underlay ---------------
#network = RouterLine
#network = GTITM_e1212
#network = Network20
*.nPeers = 15
#*.nRouter = 4
**.noneTransitNodesAccessRouters = true
**.minAccessDelay = 1
**.maxAccessDelay = 60

# ------------- One router network --------------
network = Donet_Homo_oneRouter_Network
*.nNodePerRouter = 60
#Donet_Homo_oneRouter_Network.nNodePerRouter = 2
#Donet_Homo_oneRouter_Network.nNodePerRouter = ${100,200}


# -----------------------------
# Parameter space
# -----------------------------
sim-time-limit = 250s
#warmup-period = 100s

# Controlling the log output
cmdenv-express-mode = true

#cmdenv-express-mode = false
#record-eventlog = true

repeat = 1

# -----------------------------
# ------- Recording -----------
# -----------------------------

# -------- Scalar --------
#*.peerNode[0].peerApp.mesh.maxNOP.param-record-as-scalar = true
#*.appSetting.videoStreamBitRate.param-record-as-scalar = true

**.globalStatistic.**.scalar-recording = true
**.mesh.**.scalar-recording = true
#**.globalStatistic.**.scalar-recording = false

**.scalar-recording = false
#**.scalar-recording = true

# -------- Vector --------
**.globalStatistic.**.vector-recording = true
**.mesh.**.vector-recording = true
#**.activePeerTable.aptSize.vector-recording = true
#**.queue.vector-recording = false
#**.player.vector-recording = true
#**.chunkGenerator.vector-recording = true
#**.videoBuffer.vector-recording = true
#**.churnModerator.vector-recording = true
#**.gossip.vector-recording = true

#**.vector-recording = true
**.vector-recording = false

# -----------------------------
# --- Start times ---
# -----------------------------
*.sourceNode[*].peerApp.chunkGenerator.videoStartTime = 0s
*.sourceNode[*].peerApp.mesh.startTime = 0s
*.peerNode[*].peerApp.mesh.startTime = uniform(1s, 1.001s)


# -----------------------------
# Global modules
# ----------------------------->
*.statisticModule = "DonetStatistic"

#*.globalStatistic.gstatLog = "../results/gstatlog.txt"
*.globalStatistic.gstatLog = "/nix/workspace/omnet422-inet118/so/simulations/results/gstatlog.txt"
*.globalStatistic.interval_reportCI = 1.0s
*.globalStatistic.interval_reportSystemSize = 1.0s

*.activePeerTable.interval_reportSize = 1.0s
# <-----------------------------

#*.meshObserver.meshOverlayLogFile = "..//results//mesh-overlay-link.txt"
#*.logger.logFile = "..//results//node-activity-log.txt"

# -----------------------------
# ------- Video Streaming -----
# -----------------------------
*.appSetting.bufferMapSize = 30s
*.appSetting.chunkSize = 1250B
#*.appSetting.chunkSize = 62500B
*.appSetting.videoStreamBitRate = 100kbps
*.appSetting.videoStreamBitRate = 200kbps
#*.appSetting.videoStreamBitRate = ${videoStreamBitRate= 100,200}kbps
*.appSetting.interval_bufferMap = 0.5s

# -----------------------------
# Node settings
# -----------------------------
**.localPort = 9000
**.destPort = 9000

# -- Source Node
*.sourceNode.peerApp.mesh.maxNOP = 4
*.sourceNode.peerApp.mesh.threshold_idleDuration_buffermap = 10.0s
*.sourceNode.peerApp.mesh.interval_partnerlistCleanup = 5.0s
*.sourceNode.peerApp.mesh.interval_reportStatistic = 1.0s

# --- Peer nodes
#*.peerNode[*].peerApp.mesh.maxNOP = ${maxNOP=4..6}
*.peerNode[*].peerApp.mesh.maxNOP = 2
*.peerNode[*].peerApp.mesh.offsetNOP = 1

#*.peerNode[*].peerApp.mesh.requestFactor_moderate = 1.2
#*.peerNode[*].peerApp.mesh.requestFactor_aggressive = 2.4
*.peerNode[*].peerApp.mesh.interval_chunkScheduling = 1.0s
*.peerNode[*].peerApp.mesh.interval_rejoin = 5s
*.peerNode[*].peerApp.mesh.interval_timeout_joinReqAck = 2s
#*.peerNode[*].peerApp.mesh.interval_waitingPartnershipResponse = 3s # Patient behavior :)
*.peerNode[*].peerApp.mesh.threshold_scarity = 3

*.peerNode[*].peerApp.mesh.interval_findMorePartner = 2.0s
*.peerNode[*].peerApp.mesh.interval_startPlayer = 0.5s

*.peerNode[*].peerApp.mesh.factor_requestList = 4

*.peerNode[*].peerApp.mesh.interval_partnershipRefinement = 10.0s
#*.peerNode[*].peerApp.mesh.interval_partnerlistCleanup = 5.0s
#*.peerNode[*].peerApp.mesh.threshold_idleDuration_buffermap = 10.0s

#*.peerNode[*].peerApp.player.interval_reportStatistic = 30s

*.peerNode[*].peerApp.mesh.interval_reportStatistic = 1s
*.peerNode[*].peerApp.mesh.interval_reportActive = 1.0s

# Channels


# Player settings
*.peerNode[*].peerApp.player.percent_buffer_low = 0.3
*.peerNode[*].peerApp.player.percent_buffer_high = 0.5
*.peerNode[*].peerApp.player.max_skipped_chunk = 3
*.peerNode[*].peerApp.player.interval_probe_playerStart = 0.5s
*.peerNode[*].peerApp.player.interval_recheckVideoBuffer = 0.5s

# Playing with the Queue in PPP modules
*.router.ppp[*].queue.frameCapacity = 1000





# -----------------------------------------------------------------------------
# ----------------------- Heter Router Line -----------------------------------
# -----------------------------------------------------------------------------
[Config Donet_Heter_RouterLine_Network]
network = Donet_Heter_RouterLine_Network
sim-time-limit = 11s

# -----------------------------
# Parameter space
# -----------------------------
# --- Total number of peer nodes = nNodePerRouter * nRouter
*.nNodePerRouter = ${100}
*.nRouter = 1

*.percentGroup1 = 0.1 # 3M
*.percentGroup2 = 0.2 # 1M
*.percentGroup3 = 0.3 # 384K
*.percentGroup4 = 0.4 # 128K

#seed-set = 12345
repeat = 1
seed-set = ${repetition}

# -----------------------------
# ------- Recording -----------
# -----------------------------
#**.scalar-recording = false
**.queue.vector-recording = false
**.nNodePerRouter.param-record-as-scalar = true
**.chunkGenerator.vector-recording = true
**.mesh.vector-recording = true
**.churnModerator.vector-recording = true
#**.gossip.vector-recording = true

# -----------------------------
# --- Start times ---
# -----------------------------
#*.sourceNode.peerApp.startTime = 0s
*.sourceNode.peerApp.chunkGenerator.videoStartTime = 5s
*.peerNode[*].peerApp.mesh.startTime = uniform(1s, 1.001s)

# -----------------------------
# Global modules
# -----------------------------
    # -- Churn:

    # --- Static "Churn"
		*.churnModel = "StaticChurn"
#		*.churnModerator.arrivalTime = uniform(0, 10)
		*.churnModerator.lowerBoundAT = 0s
		*.churnModerator.upperBoundAT = 10s

    # --- Exponential Churn
#		*.churnModel = "ExponentialChurnModel"
#		*.churnModerator.arrivalRate = 5
#		*.churnModerator.meanDuration = 10.0s

	# --- Parameters are applied from [Veloso-2002]
#		*.churnModel = "VelosoChurnModel"
#		*.churnModerator.a = 2.52
#		*.churnModerator.b = 1.55
#		*.churnModerator.lambda = 5.19
#		*.churnModerator.mu = 1.44

    # --- Uniform Churn
#		*.churnModel = "UniformChurn"
#		*.churnModerator.lowerBoundAT = 1s
#		*.churnModerator.upperBoundAT = 3s
#		*.churnModerator.lowerBoundDT = 2s
#		*.churnModerator.upperBoundDT = 10s 

*.appSetting.bufferMapSize      = 2s
*.appSetting.chunkSize          = 1250B
*.appSetting.videoStreamBitRate = 100kbps

# -----------------------------
# Gossip Protocol specific settings
# -----------------------------
#**.gossip.c = 0
#**.appMessageInterval = 1s
#**.isoCheckInterval = 1s

# -----------------------------
# Node settings
# -----------------------------
**.localPort = 9000
**.destPort = 9000

# -- Source Node

#*.peerNode[*].peerApp.mesh.startTime = uniform(2s, 2.001s)


# ---------------------- end of configuration file ---------------------------------
